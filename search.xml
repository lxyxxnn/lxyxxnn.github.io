<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo 添加分类及标签</title>
    <url>/2019/04/24/My-New-Post/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hello hexo markdown</title>
    <url>/2016/11/16/headwrite/</url>
    <content><![CDATA[<p>我是短小精悍的文章摘要(๑•̀ㅂ•́) ✧</p>
<span id="more"></span>

<p>紧接着文章摘要的正文内容</p>
<p>啦啦啦啦德玛西亚开着法拉利</p>
]]></content>
      <tags>
        <tag>hello</tag>
        <tag>hexo</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2017/05/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
  </entry>
  <entry>
    <title>复习springboot</title>
    <url>/2022/05/06/springboot/</url>
    <content><![CDATA[<h2 id="什么是springboot"><a href="#什么是springboot" class="headerlink" title="什么是springboot"></a>什么是springboot</h2><p> springboot是一个管理整合框架的微服务框架，简化了web开发<br> maven是整合jar包的，springboot是整合框架的</p>
<h2 id="springboot-hello-world"><a href="#springboot-hello-world" class="headerlink" title="springboot hello world"></a>springboot hello world</h2><h3 id="在官网下载包"><a href="#在官网下载包" class="headerlink" title="在官网下载包"></a>在官网下载包</h3><h3 id="在idea中新建spring-initial项目"><a href="#在idea中新建spring-initial项目" class="headerlink" title="在idea中新建spring initial项目"></a>在idea中新建spring initial项目</h3>]]></content>
      <categories>
        <category>后端</category>
      </categories>
      <tags>
        <tag>后端</tag>
        <tag>java</tag>
        <tag>框架，接口</tag>
      </tags>
  </entry>
  <entry>
    <title>Retrofit视频教程，实战开发</title>
    <url>/2020/11/01/test1tags/</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>Retrofit</category>
      </categories>
      <tags>
        <tag>http</tag>
        <tag>retrofit</tag>
        <tag>retrofit视频教程</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/05/05/hello-world2/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>abc</title>
    <url>/2022/05/06/abc/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>面试题1</title>
    <url>/2022/05/12/mianshi/</url>
    <content><![CDATA[<h2 id="内容1"><a href="#内容1" class="headerlink" title="内容1"></a>内容1</h2><p>阿西吧</p>
<h3 id="三级小标题"><a href="#三级小标题" class="headerlink" title="三级小标题"></a>三级小标题</h3><h2 id="内容2"><a href="#内容2" class="headerlink" title="内容2"></a>内容2</h2><p>阿西吧</p>
<h3 id="三级小标题-1"><a href="#三级小标题-1" class="headerlink" title="三级小标题"></a>三级小标题</h3><h3 id="三级小标题-2"><a href="#三级小标题-2" class="headerlink" title="三级小标题"></a>三级小标题</h3><p>外部链接: <a href="https://www.baidu.com/">链接代名词</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hello world</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>面试题</category>
      </categories>
      <tags>
        <tag>前端面试题</tag>
      </tags>
  </entry>
  <entry>
    <title>面试题第一天</title>
    <url>/2022/05/12/%E6%95%B0%E7%BB%84/</url>
    <content><![CDATA[<h2 id="一、将数组的length设置为0，取第一个元素会返回什么？"><a href="#一、将数组的length设置为0，取第一个元素会返回什么？" class="headerlink" title="一、将数组的length设置为0，取第一个元素会返回什么？"></a>一、将数组的length设置为0，取第一个元素会返回什么？</h2><blockquote>
<p>设置 length &#x3D; 0 会清空数组，所以会返回 undefined</p>
</blockquote>
<h2 id="二、css动画和js动画分别有哪些优缺点"><a href="#二、css动画和js动画分别有哪些优缺点" class="headerlink" title="二、css动画和js动画分别有哪些优缺点"></a>二、css动画和js动画分别有哪些优缺点</h2><h3 id="css动画"><a href="#css动画" class="headerlink" title="css动画"></a>css动画</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><blockquote>
<p>浏览器可以对动画进行优化<br>代码相对简单，<strong>性能调优方向固定</strong><br>对于帧速表现不好的低版本浏览器，css可以做到自然降级，<br>   而JS则需要撰写额外代码</p>
</blockquote>
<h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><blockquote>
<p>运行过程比较弱，无法符加事件绑定回调函数<br>代码冗长，用css实现稍微复杂一点的动画css代码都会变得很笨重</p>
</blockquote>
<h3 id="js动画"><a href="#js动画" class="headerlink" title="js动画"></a>js动画</h3><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><blockquote>
<p>控制能力很强，可以在动画播放过程中对动画进行控制：开始，暂停，回放，终止<br>   取消都是可以做到的。<br>动画效果比css3动画丰富，比如曲线运动，冲击闪烁，视差滚动效果，<strong>只有js动画才能完成</strong><br>css3有兼容性问题，而js大多时候没有兼容性问题</p>
</blockquote>
<h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><blockquote>
<p>代码的复杂度高于css动画<br>js代码在浏览器主线程中运行，但主线程中还有其他需要运行的js脚本，样式计算，布局<br>   绘制任务等，对其干扰会导致线程出现阻塞，造成丢帧的情况</p>
</blockquote>
<hr>
<h2 id="三、前端实现动画有哪些方式"><a href="#三、前端实现动画有哪些方式" class="headerlink" title="三、前端实现动画有哪些方式"></a>三、前端实现动画有哪些方式</h2><h3 id="最常用的动画实现方式有以下几种"><a href="#最常用的动画实现方式有以下几种" class="headerlink" title="最常用的动画实现方式有以下几种"></a>最常用的动画实现方式有以下几种</h3><blockquote>
<p>1.css3的transition属性<br>  用来设置样式的属性值是如何从一种平滑的状态过渡到另一个状态<br>  transition可以拆为四个过度属性：  </p>
<table>
<thead>
<tr>
<th>值</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>transition</td>
<td>规定设置过渡效果的css属性的名称</td>
</tr>
<tr>
<td>transition-duration</td>
<td>规定完成过渡效果需要多少秒或毫秒</td>
</tr>
<tr>
<td>transition-timing-fuction</td>
<td>规定速度效果的速度曲线</td>
</tr>
<tr>
<td>transition——delay</td>
<td>定义过渡效果何时开始</td>
</tr>
<tr>
<td><strong>演示代码</strong></td>
<td></td>
</tr>
<tr>
<td><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">width:50px;</span><br><span class="line">height:50px;</span><br><span class="line">background-color:pink;</span><br><span class="line">transition:1s;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">div:hover&#123;</span><br><span class="line">width:200px;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure></td>
<td></td>
</tr>
<tr>
<td><strong>transition默认属性为</strong>：transition：all 0 ease 0；</td>
<td></td>
</tr>
</tbody></table>
</blockquote>
<hr>
<blockquote>
<p>2.css3的animation属性<br>  animation属性类似于flash逐帧动画，由关键帧组成，由keyframes属性完成<br>  ** animation与transition的区别：<br>  transition只需要指定动画开始和结束的状态，整个动画的过程是由整个特定的函数控制，不需要管<br>  animation可以对动画过程中各个关键帧进行设置<br>   <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">div&#123;</span><br><span class="line">widht:300px;</span><br><span class="line">height:300px;</span><br><span class="line">background-color:pink;</span><br><span class="line">&#125;</span><br><span class="line">div:hover&#123;</span><br><span class="line">animation:change1 5s;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes change1&#123;</span><br><span class="line">25% &#123;widht:130px;background-color:red;&#125;</span><br><span class="line">50% &#123;widht:140px;background-color:blue;&#125;</span><br><span class="line">75% &#123;widht:210px;background-color:green;&#125;</span><br><span class="line">100% &#123;width:250px;background-color:yellow;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>3.原生js动画<br>   **主要思想是通过setInterval和setTimeout方法的回调函数来持续<br>   调用改变某个元素的css样式以达到元素样式变化的效果。<br>   <strong>问题：</strong>js实现动画会导致页面频繁重排重绘，一般用在pc上，移动端会明显卡顿</p>
</blockquote>
<pre><code> &lt;script&gt;
 let elem = document.querySelector(&quot;#rect&quot;);
 let left = 0;
 let timer = setInterval(function() &#123;
  if(left&lt;window.innerWidth-200) &#123;
  elem.style.marginLeft = left +&#39;px&#39;;
  left++;
  &#125; else &#123;
   clearInterval(timer);
  &#125;
 &#125;,16)
 &lt;/script&gt;
</code></pre>
<p>   在很多移动端动画性能优化时，一般使用16ms来进行<strong>节流处理</strong>连续触发的浏览器事件<br>   通过这种方式减少持续事件的触发频率，提高动画流畅性</p>
<blockquote>
<p>4.使用canvas绘制动画<br>5.SVG动画<br>6.jquery的animate函数<br>7,使用gif图片</p>
</blockquote>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote>
<ul>
<li>代码复杂度方面简单动画：css代码实现会简单一些，js复杂一些。 复杂动画的话：css代码就会变得冗长，js实现起来更优。</li>
</ul>
</blockquote>
<ul>
<li>动画运行时，对动画的控制程度上 js 比较灵活，能控制动画暂停，取消，终止等css动画不能添加事件，只能设置固定节点进行什么样的过渡动画。</li>
<li>兼容方面 css 有浏览器兼容问题js大多情况下是没有的。</li>
<li>性能方面 css动画相对于优一些，css 动画通过GUI解析js动画需要经过js引擎代码解析，然后再进行 GUI 解析渲染。</li>
</ul>
]]></content>
      <categories>
        <category>面试题</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>数组</tag>
      </tags>
  </entry>
</search>
